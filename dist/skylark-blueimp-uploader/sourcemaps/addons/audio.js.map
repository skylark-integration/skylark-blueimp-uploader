{"version":3,"sources":["addons/audio.js"],"names":["define","langx","eventer","imagex","$","blueimp","fileuploadui","prototype","options","processQueue","unshift","action","prefix","fileTypes","maxFileSize","disabled","name","widget","loadAudioFileTypes","_audioElement","document","createElement","processActions","loadAudio","data","url","audio","file","files","index","this","canPlayType","type","size","test","createObjectURL","cloneNode","src","controls","setAudio"],"mappings":";;;;;;;AAAAA,QACI,sBACA,4BACA,uBACA,iBACA,oBACF,SAAUC,EAAMC,EAAQC,EAAOC,GAC7B,aA0EA,OAvEAA,EAAEC,QAAQC,aAAaC,UAAUC,QAAQC,aAAaC,SAE9CC,OAAQ,YAERC,QAAQ,EACRC,UAAW,IACXC,YAAa,IACbC,SAAU,yBAGVJ,OAAQ,WACRK,KAAM,oBACND,SAAU,yBAMlBX,EAAEa,OAAO,uBAAwBb,EAAEC,QAAQC,cAEvCE,SAGIU,mBAAoB,eAGxBC,cAAeC,SAASC,cAAc,SAEtCC,gBAMIC,UAAW,SAAUC,EAAMhB,GACvB,GAAIA,EAAQO,SACR,OAAOS,EAEX,IACIC,EACAC,EAFAC,EAAOH,EAAKI,MAAMJ,EAAKK,OAG3B,OAAIC,KAAKX,cAAcY,aACfD,KAAKX,cAAcY,YAAYJ,EAAKK,QACH,WAAhC5B,EAAE4B,KAAKxB,EAAQM,cACZa,EAAKM,MAAQzB,EAAQM,gBACvBN,EAAQK,WACNL,EAAQK,UAAUqB,KAAKP,EAAKK,SACpCP,EAAMtB,EAAOgC,gBAAgBR,MAEzBD,EAAQI,KAAKX,cAAciB,WAAU,IAC/BC,IAAMZ,EACZC,EAAMY,UAAW,EACjBd,EAAKE,MAAQA,EACNF,GAGRA,GAIXe,SAAU,SAAUf,EAAMhB,GAItB,OAHIgB,EAAKE,QAAUlB,EAAQO,WACvBS,EAAKI,MAAMJ,EAAKK,OAAOrB,EAAQQ,MAAQ,WAAaQ,EAAKE,OAEtDF,MAOZpB","file":"../../addons/audio.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-imagex\",\r\n    'skylark-jquery',\r\n    \"../fileupload-ui\"\r\n],function (langx,eventer,imagex,$) {\r\n    'use strict';\r\n\r\n    // Prepend to the default processQueue:\r\n    $.blueimp.fileuploadui.prototype.options.processQueue.unshift(\r\n        {\r\n            action: 'loadAudio',\r\n            // Use the action as prefix for the \"@\" options:\r\n            prefix: true,\r\n            fileTypes: '@',\r\n            maxFileSize: '@',\r\n            disabled: '@disableAudioPreview'\r\n        },\r\n        {\r\n            action: 'setAudio',\r\n            name: '@audioPreviewName',\r\n            disabled: '@disableAudioPreview'\r\n        }\r\n    );\r\n\r\n    // The File Upload Audio Preview plugin extends the fileupload widget\r\n    // with audio preview functionality:\r\n    $.widget('blueimp.fileuploadui', $.blueimp.fileuploadui, {\r\n\r\n        options: {\r\n            // The regular expression for the types of audio files to load,\r\n            // matched against the file type:\r\n            loadAudioFileTypes: /^audio\\/.*$/\r\n        },\r\n\r\n        _audioElement: document.createElement('audio'),\r\n\r\n        processActions: {\r\n\r\n            // Loads the audio file given via data.files and data.index\r\n            // as audio element if the browser supports playing it.\r\n            // Accepts the options fileTypes (regular expression)\r\n            // and maxFileSize (integer) to limit the files to load:\r\n            loadAudio: function (data, options) {\r\n                if (options.disabled) {\r\n                    return data;\r\n                }\r\n                var file = data.files[data.index],\r\n                    url,\r\n                    audio;\r\n                if (this._audioElement.canPlayType &&\r\n                        this._audioElement.canPlayType(file.type) &&\r\n                        ($.type(options.maxFileSize) !== 'number' ||\r\n                            file.size <= options.maxFileSize) &&\r\n                        (!options.fileTypes ||\r\n                            options.fileTypes.test(file.type))) {\r\n                    url = imagex.createObjectURL(file);\r\n                    if (url) {\r\n                        audio = this._audioElement.cloneNode(false);\r\n                        audio.src = url;\r\n                        audio.controls = true;\r\n                        data.audio = audio;\r\n                        return data;\r\n                    }\r\n                }\r\n                return data;\r\n            },\r\n\r\n            // Sets the audio element as a property of the file object:\r\n            setAudio: function (data, options) {\r\n                if (data.audio && !options.disabled) {\r\n                    data.files[data.index][options.name || 'preview'] = data.audio;\r\n                }\r\n                return data;\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    return $;\r\n\r\n});\r\n"]}