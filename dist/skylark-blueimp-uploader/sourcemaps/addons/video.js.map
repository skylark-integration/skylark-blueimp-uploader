{"version":3,"sources":["addons/video.js"],"names":["define","langx","eventer","imagex","$","blueimp","fileuploadui","prototype","options","processQueue","unshift","action","prefix","fileTypes","maxFileSize","disabled","name","widget","loadVideoFileTypes","_videoElement","document","createElement","processActions","loadVideo","data","url","video","file","files","index","this","canPlayType","type","size","test","loadImage","createObjectURL","cloneNode","src","controls","setVideo"],"mappings":";;;;;;;AAAAA,QACI,sBACA,4BACA,uBACA,iBACA,oBACF,SAAUC,EAAMC,EAAQC,EAAOC,GAC7B,aA0EA,OAvEAA,EAAEC,QAAQC,aAAaC,UAAUC,QAAQC,aAAaC,SAE9CC,OAAQ,YAERC,QAAQ,EACRC,UAAW,IACXC,YAAa,IACbC,SAAU,yBAGVJ,OAAQ,WACRK,KAAM,oBACND,SAAU,yBAMlBX,EAAEa,OAAO,uBAAwBb,EAAEC,QAAQC,cAEvCE,SAGIU,mBAAoB,eAGxBC,cAAeC,SAASC,cAAc,SAEtCC,gBAMIC,UAAW,SAAUC,EAAMhB,GACvB,GAAIA,EAAQO,SACR,OAAOS,EAEX,IACIC,EACAC,EAFAC,EAAOH,EAAKI,MAAMJ,EAAKK,OAG3B,OAAIC,KAAKX,cAAcY,aACfD,KAAKX,cAAcY,YAAYJ,EAAKK,QACH,WAAhC5B,EAAE4B,KAAKxB,EAAQM,cACZa,EAAKM,MAAQzB,EAAQM,gBACvBN,EAAQK,WACNL,EAAQK,UAAUqB,KAAKP,EAAKK,SACpCP,EAAMU,UAAUC,gBAAgBT,MAE5BD,EAAQI,KAAKX,cAAckB,WAAU,IAC/BC,IAAMb,EACZC,EAAMa,UAAW,EACjBf,EAAKE,MAAQA,EACNF,GAGRA,GAIXgB,SAAU,SAAUhB,EAAMhB,GAItB,OAHIgB,EAAKE,QAAUlB,EAAQO,WACvBS,EAAKI,MAAMJ,EAAKK,OAAOrB,EAAQQ,MAAQ,WAAaQ,EAAKE,OAEtDF,MAOZpB","file":"../../addons/video.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-imagex\",\r\n    'skylark-jquery',\r\n    \"../fileupload-ui\"\r\n],function (langx,eventer,imagex,$) {\r\n    'use strict';\r\n\r\n    // Prepend to the default processQueue:\r\n    $.blueimp.fileuploadui.prototype.options.processQueue.unshift(\r\n        {\r\n            action: 'loadVideo',\r\n            // Use the action as prefix for the \"@\" options:\r\n            prefix: true,\r\n            fileTypes: '@',\r\n            maxFileSize: '@',\r\n            disabled: '@disableVideoPreview'\r\n        },\r\n        {\r\n            action: 'setVideo',\r\n            name: '@videoPreviewName',\r\n            disabled: '@disableVideoPreview'\r\n        }\r\n    );\r\n\r\n    // The File Upload Video Preview plugin extends the fileupload widget\r\n    // with video preview functionality:\r\n    $.widget('blueimp.fileuploadui', $.blueimp.fileuploadui, {\r\n\r\n        options: {\r\n            // The regular expression for the types of video files to load,\r\n            // matched against the file type:\r\n            loadVideoFileTypes: /^video\\/.*$/\r\n        },\r\n\r\n        _videoElement: document.createElement('video'),\r\n\r\n        processActions: {\r\n\r\n            // Loads the video file given via data.files and data.index\r\n            // as video element if the browser supports playing it.\r\n            // Accepts the options fileTypes (regular expression)\r\n            // and maxFileSize (integer) to limit the files to load:\r\n            loadVideo: function (data, options) {\r\n                if (options.disabled) {\r\n                    return data;\r\n                }\r\n                var file = data.files[data.index],\r\n                    url,\r\n                    video;\r\n                if (this._videoElement.canPlayType &&\r\n                        this._videoElement.canPlayType(file.type) &&\r\n                        ($.type(options.maxFileSize) !== 'number' ||\r\n                            file.size <= options.maxFileSize) &&\r\n                        (!options.fileTypes ||\r\n                            options.fileTypes.test(file.type))) {\r\n                    url = loadImage.createObjectURL(file);\r\n                    if (url) {\r\n                        video = this._videoElement.cloneNode(false);\r\n                        video.src = url;\r\n                        video.controls = true;\r\n                        data.video = video;\r\n                        return data;\r\n                    }\r\n                }\r\n                return data;\r\n            },\r\n\r\n            // Sets the video element as a property of the file object:\r\n            setVideo: function (data, options) {\r\n                if (data.video && !options.disabled) {\r\n                    data.files[data.index][options.name || 'preview'] = data.video;\r\n                }\r\n                return data;\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    return $;\r\n\r\n});\r\n"]}