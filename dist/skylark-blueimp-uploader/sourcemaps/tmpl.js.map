{"version":3,"sources":["tmpl.js"],"names":["define","langx","tmpl","str","data","f","test","Function","arg","helper","replace","regexp","func","cache","load","id","document","getElementById","innerHTML","s","p1","p2","p3","p4","p5","\n","\r","\t"," ","encReg","encMap","<",">","&","\"","'","encode","c"],"mappings":";;;;;;;AAAAA,QACI,uBACF,SAAUC,GAEV,aAEA,IAAIC,EAAO,SAAUC,EAAKC,GACxB,IAAIC,EAAK,YAAYC,KAAKH,GAEtB,IAAII,SACJL,EAAKM,IAAM,QACX,qBACIN,EAAKO,OACL,QACAN,EAAIO,QAAQR,EAAKS,OAAQT,EAAKU,MAC9B,gBAPHV,EAAKW,MAAMV,GAAOD,EAAKW,MAAMV,IAAQD,EAAKA,EAAKY,KAAKX,IASzD,OAAOC,EACHC,EAAED,EAAMF,GACR,SAAUE,GACV,OAAOC,EAAED,EAAMF,KAuDrB,OApDAA,EAAKW,SACLX,EAAKY,KAAO,SAAUC,GACpB,OAAOC,SAASC,eAAeF,GAAIG,WAErChB,EAAKS,OAAS,2EACdT,EAAKU,KAAO,SAAUO,EAAGC,EAAIC,EAAIC,EAAIC,EAAIC,GACvC,OAAIJ,GAIEK,KAAM,MACNC,KAAM,MACNC,KAAM,MACNC,IAAK,KACLR,IAAO,KAAOA,EAGhBC,EAES,MAAPA,EACK,QAAUC,EAAK,MAEjB,MAAQA,EAAK,aAAeA,EAAK,MAEtCC,EAEK,KAELC,EAEK,aAFT,GAKFtB,EAAK2B,OAAS,eACd3B,EAAK4B,QACHC,IAAK,OACLC,IAAK,OACLC,IAAK,QACLC,IAAK,SACLC,IAAK,SAEPjC,EAAKkC,OAAS,SAAUjB,GACtB,OAAa,MAALA,EAAY,GAAK,GAAKA,GAAGT,QAAQR,EAAK2B,OAAQ,SAAUQ,GAC9D,OAAOnC,EAAK4B,OAAOO,IAAM,MAG7BnC,EAAKM,IAAM,IACXN,EAAKO,OACH,0FAIKP","file":"../tmpl.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\"\r\n],function (langx) {\r\n\r\n  'use strict'\r\n\r\n  var tmpl = function (str, data) {\r\n    var f = !/[^\\w\\-.:]/.test(str)\r\n      ? (tmpl.cache[str] = tmpl.cache[str] || tmpl(tmpl.load(str)))\r\n      : new Function( // eslint-disable-line no-new-func\r\n        tmpl.arg + ',tmpl',\r\n        'var _e=tmpl.encode' +\r\n            tmpl.helper +\r\n            \",_s='\" +\r\n            str.replace(tmpl.regexp, tmpl.func) +\r\n            \"';return _s;\"\r\n      )\r\n    return data\r\n      ? f(data, tmpl)\r\n      : function (data) {\r\n        return f(data, tmpl)\r\n      }\r\n  }\r\n  tmpl.cache = {}\r\n  tmpl.load = function (id) {\r\n    return document.getElementById(id).innerHTML\r\n  }\r\n  tmpl.regexp = /([\\s'\\\\])(?!(?:[^{]|\\{(?!%))*%\\})|(?:\\{%(=|#)([\\s\\S]+?)%\\})|(\\{%)|(%\\})/g\r\n  tmpl.func = function (s, p1, p2, p3, p4, p5) {\r\n    if (p1) {\r\n      // whitespace, quote and backspace in HTML context\r\n      return (\r\n        {\r\n          '\\n': '\\\\n',\r\n          '\\r': '\\\\r',\r\n          '\\t': '\\\\t',\r\n          ' ': ' '\r\n        }[p1] || '\\\\' + p1\r\n      )\r\n    }\r\n    if (p2) {\r\n      // interpolation: {%=prop%}, or unescaped: {%#prop%}\r\n      if (p2 === '=') {\r\n        return \"'+_e(\" + p3 + \")+'\"\r\n      }\r\n      return \"'+(\" + p3 + \"==null?'':\" + p3 + \")+'\"\r\n    }\r\n    if (p4) {\r\n      // evaluation start tag: {%\r\n      return \"';\"\r\n    }\r\n    if (p5) {\r\n      // evaluation end tag: %}\r\n      return \"_s+='\"\r\n    }\r\n  }\r\n  tmpl.encReg = /[<>&\"'\\x00]/g // eslint-disable-line no-control-regex\r\n  tmpl.encMap = {\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '&': '&amp;',\r\n    '\"': '&quot;',\r\n    \"'\": '&#39;'\r\n  }\r\n  tmpl.encode = function (s) {\r\n    return (s == null ? '' : '' + s).replace(tmpl.encReg, function (c) {\r\n      return tmpl.encMap[c] || ''\r\n    })\r\n  }\r\n  tmpl.arg = 'o'\r\n  tmpl.helper =\r\n    \",print=function(s,e){_s+=e?(s==null?'':s):_e(s);}\" +\r\n    ',include=function(s,d){_s+=tmpl(s,d);}';\r\n\r\n\r\n  return tmpl;\r\n\r\n});"]}